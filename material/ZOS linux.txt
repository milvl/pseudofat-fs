- Jakým příkazem si vypíšu běžící procesy?
   - $ ps aux
   - $ top
- Jak vypíšu login přihlášeného uživatele na daném terminálu?
   - $ whoami
   - $ who | grep <název terminálu> (who | grep tty1)
   - $ w | grep <název terminálu> (w | grep tty1)
- Jak vypíšu druhou až pátou řádku ze souboru s1.txt?
   - $ head -n 5 s1.txt | tail -n 4
   - $ sed -n '2,5p' s1.txt
   - $ awk 'NR >= 2 && NR <= 5' s1.txt
- Co je uloženo v /etc/passwd a co v /etc/shadow?
   - /etc/passwd: základní informace o uživatelských účtech v systému
      - username:x:UID:GID:gecos:home_directory:shell
      - x je placeholder pro hesla, která se zde již neukládají oproti starým Unix verzím 
   - /etc/shadow: obsahuje hashem zabezpečené informace o heslech
      - username:hashed_password:last_change:min:max:warn:inactive:expire
- Jak funguje nastavení přístupových práv pomocí příkazu chmod?
   - Práva: r - read, w - write, e - execute
   - Práva pro u - user, g - group, o - others (kdokoliv jiný), a - all
   - Symbolický způsob nastavení práv
      - Přístupová práva lze nastavovat symbolicky pomocí kategorií (u, g, o, a) a operátorů:
      - Operátory:
         - +: Přidání práva.
         - -: Odebrání práva.
         - =: Nastavení přesně zadaných práv (ostatní práva se odeberou).
      - $ chmod g+r soubor.txt
      - $ chmod u=rwx,g=,o= soubor.txt
      - $ chmod a+x soubor.txt
   - Numerický (oktální) způsob nastavení práv
      - Podle bitů: 
         - u        g        o
         - rwx         rwx         rwx
         - _._._          _._._          _._._
         - např. 111 100 100 (vlastník vše, group a ostatní pouze čtení)
         - => 7 4 4
         - $ chmod 744 soubor.txt
         - ekvivalent k $ chmod u=rwx,g=r,o=r soubor.txt
   - Argumenty:
      - -R 
         - rekurzivně včetně podadresářů
      - --reference=soubor1.txt soubor2.txt
         - Nastav podle soubor1.txt
- Co dělá ls -i a ls -al?
   - $ ls -i
      - Zobrazí inode číslo každého souboru nebo adresáře vedle jeho názvu
   - $ ls -al
      - Zobrazí všechny soubory v aktuálním adresáři s podrobnými informacemi
- Co udělá echo $2 v příkazovém skriptu?
   - Vypíše druhý argument z příkazové řádky
- Jak vypsat návratovou hodnotu posledního příkazu?
   - $ echo $?
- Jaký význam má první řádka skriptu #!/bin/bash ?
   - Jedná se o shebang a určuje jakým příkazovým procesorem by se měl skript vykonávat
- K čemu slouží příkazy jobs, fg?
   - $ jobs - zobrazuje seznam všech aktuálně běžících nebo pozastavených úloh (jobs) v shellu
   - $ fg - přepíná úlohu (job) z pozadí nebo pozastaveného stavu do popředí
      - $ fg [job_ID]
- Jaký je rozdíl mezi du -h a df -h?
   - $ du -h
      - Zobrazuje velikost souborů a adresářů v aktuálním adresáři nebo na specifikovaném místě.
      - -h: Zobrazení velikostí ve snadno čitelném formátu (např. KB, MB, GB).
   - $ df -h
      - Zobrazuje informace o dostupném a obsazeném místě na diskových oddílech.
      - -h: Zobrazení velikostí ve snadno čitelném formátu.
